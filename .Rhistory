usethis::use_mit_license()
usethis::use_gpl3_license()
The main objective of this package is to calculate the relative abundance index (RAI) and the encounter rate (eR) with data obtained from camera traps.
usethis::use_mit_license()
source('~/.active-rstudio-document', echo=TRUE)
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
dev.capture()
devtools::document()
help("RAIeR")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all()
devtools::load_all(".")
?date_LYS
devtools::load_all(".")
?date_LYS
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
?date_LSY
library(RAIeR)
?date_LYS
devtools::load_all(".")
?date_LSY
library(RAIeR)
?date_LSY
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
?date_LYS
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
?dataFormat
library(RAIeR)
devtools::load_all(".")
usethis::edit_r_environ()
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
Sys.timezone()
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
?points
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
usethis::use_testthat()
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
?leaflet
?addProviderTiles
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?seq
?xmin
devtools::load_all(".")
?with
?tapply
?subset
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?interp
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
?aov
?TukeyHSD
?HSD.test
?bar.group
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
?glm
devtools::load_all(".")
?summary
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
help(RAIeR)
help(RAIeR)
RAIeR
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?arrange
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
remove.packages("RAIeR", lib="~/Library/R/x86_64/4.4/library")
install.packages("~/Documents/GitHub/RAIeR/RAIeR_0.0.0.9000.tar.gz", repos = NULL, type = "source")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(IAR)
remove.packages("IAR", lib="~/Library/R/x86_64/4.4/library")
library(RAIeR)
remove.packages("RAIeR", lib="~/Library/R/x86_64/4.4/library")
install.packages("~/Documents/GitHub/RAIeR/RAIeR_0.0.0.9000.tar.gz", repos = NULL, type = "source")
help(package="RAIeR")
devtools::load_all(".")
devtools::load_all(".")
?geom_sf
?geom_sf
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?stat_density_2d
devtools::load_all(".")
formatR::tidy_dir("RAIeR")
library(formatR)
tidy_source()
tidy_source(width.cutoff = 50)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?RAI_facet
devtools::load_all(".")
?scale_fill_gradientn
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
remove.packages("RAIeR", lib="~/Library/R/x86_64/4.4/library")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
remove.packages("RAIeR", lib="~/Library/R/x86_64/4.4/library")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
remove.packages("RAIeR", lib="~/Library/R/x86_64/4.4/library")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
library(RAIeR)
?terrain.colors
devtools::load_all(".")
library(RAIeR)
?scale_fill_viridis_d
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
help(RAIeR)
help("RAIeR")
diagnostic {eR_glm}
install.packages("styler")
styler:::style_active_file()
styler:::set_style_transformers()
styler:::style_active_file()
styler:::style_active_file()
styler::tidyverse_style()
styler::tidyverse_style()
styler::tidyverse_style(dataFormat)
dataFormat <- function(Location, data_Spp, data_CT, Problem) {
# Modified parameters:
report <- camtrapR::surveyReport(recordTable = data_Spp, CTtable = data_CT, speciesCol = "Species", stationCol = "Station", setupCol = "Fecha_colocacion", retrievalCol = "Fecha_retiro", CTDateFormat = "%d/%m/%Y", recordDateTimeCol = "DateTimeOriginal", recordDateTimeFormat = "%Y-%m-%d %H:%M:%S", CTHasProblems = Problem)
sampling_effort <- report[[1]]
days <- sampling_effort[c("Station", "n_nights_active")]
species <- report[[5]]
# Merge data.frame:
wildlife.data <- merge(species, days, all.y = T)
# Rename columns:
# wildlife.data <- wildlife.data %>%
# dplyr::rename(Camera= Station, Events= n_events, Effort= n_nights_active)
names(wildlife.data)[names(wildlife.data) == "Station"] <- "Camera"
names(wildlife.data)[names(wildlife.data) == "n_events"] <- "Events"
names(wildlife.data)[names(wildlife.data) == "n_nights_active"] <- "Effort"
# Species names abbreviation:
wildlife.data$Species <- fuzzySim::spCodes(wildlife.data$Species, sep.spcode = "_")
# Save the formated data:
write.csv(wildlife.data, paste("data/wildlife.data1_", stringr::str_to_title(Location), ".csv", sep = ""))
return(wildlife.data)
} # end function
styler::tidyverse_style(dataFormat)
styler:::style_active_pkg()
devtools::load_all(".")
devtools::load_all(".")
library(RAIeR)
rm(list = c("dataFormat"))` to remove the
conflicts
rm(list = c("dataFormat"))
devtools::load_all(".")
library(RAIeR)
data_Spp <- read.csv("/Users/smandujanor/Documents/GitHub/RAIeR/RAIeR_Master/data/CT_Spp.csv", header = T)
View(data_Spp)
data_Spp <- data_Spp[,-1]
View(data_Spp)
usethis::use_data(data_Spp)
load(file= "data_Spp.rda")
load(file= "data/data_Spp.rda")
ejemplo <- load(file= "data/data_Spp.rda")
View(ejemplo)
load(file= "data/data_Spp.rda")
data_Spp
View(data_Spp)
View(ejemplo)
View(data_Spp)
data_Spp
names(data_Spp)
data_Spp <- read.csv("/Users/smandujanor/Documents/GitHub/RAIeR/RAIeR_Master/data/CT_Spp.csv", header = T)
data_Spp <- read.csv("/Users/smandujanor/Documents/GitHub/RAIeR/RAIeR_Master/data/CT_Spp.csv", header = T)
View(data_Spp)
View(data_Spp)
data_Spp <- data_Spp[,-1]
View(data_Spp)
usethis::use_data(data_Spp)
load(file= "data/data_Spp.rda")
View(data_Spp)
devtools::load_all(".")
?data_Spp.Rd
devtools::load_all(".")
library(RAIeR)
